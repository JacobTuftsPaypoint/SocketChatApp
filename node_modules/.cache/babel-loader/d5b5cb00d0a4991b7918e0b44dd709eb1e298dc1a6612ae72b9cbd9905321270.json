{"ast":null,"code":"var _jsxFileName = \"/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/LoginPage/LoginMain.js\",\n  _s = $RefreshSig$();\nimport { Navigate, NavLink, useNavigate } from 'react-router-dom';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, getDoc, doc, setDoc } from 'firebase/firestore/lite';\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, setPersistence, browserSessionPersistence, GoogleAuthProvider, signInWithPopup, signOut } from \"firebase/auth\";\nimport React, { useState } from 'react';\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: \"movie-webapp-7e024\",\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MEASUREMENTID\n};\nconst app = initializeApp(firebaseConfig);\n// const auth = getAuth(app)\nconst googleProvider = new GoogleAuthProvider();\nconst db = getFirestore(app);\nexport default function LoginMain() {\n  _s();\n  const [username, setUsername] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const navigate = useNavigate();\n  async function getUser(email) {\n    const docRef = doc(db, \"Users\", `${email}`);\n    const docSnap = await getDoc(docRef);\n    //console.log(docSnap.data())\n    return docSnap.data();\n  }\n  async function setUserProfile(email, username) {\n    const dbref = collection(db, \"Users\");\n    await setDoc(doc(db, \"Users\", `${email}`), {\n      Username: `${username}`\n    });\n    console.log(`${username} set`);\n  }\n  function signIn() {\n    setPersistence(auth, browserSessionPersistence).then(async () => {\n      await signInWithEmailAndPassword(auth, email, password).then(userCred => {\n        if (userCred) {\n          userCred.user.displayName = username;\n          console.log(\"signed in \" + auth.currentUser.displayName);\n        }\n      }).then(() => {\n        navigate(\"/\");\n      }).catch(error => {\n        console.log(error.code);\n        var errorCode = error.code;\n        switch (errorCode) {\n          case \"auth/invalid-email\":\n            alert(\"Invalid Email\");\n            break;\n          case \"auth/wrong-password\":\n            alert(\"Invalid Password\");\n            break;\n          case \"auth/user-not-found\":\n            alert(\"User Doesnt Exist - Please Check your Email and Username\");\n            break;\n          case \"auth/missing-email\":\n            alert(\"Please enter your email\");\n            break;\n          case \"auth/internal-error\":\n            alert(\"Please enter your password\");\n            break;\n          case \"\":\n            alert(\"\");\n            break;\n        }\n      });\n      let u1 = await getUser(email);\n      console.log(u1.Username);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  function googleSignUp() {\n    setPersistence(auth, browserSessionPersistence).then(async () => {\n      signInWithPopup(auth, googleProvider).then(async result => {\n        const credential = GoogleAuthProvider.credentialFromResult(result);\n        const token = credential.accessToken;\n        const userResultName = result.user.displayName;\n        const userResultEmail = result.user.email;\n        await setUserProfile(userResultEmail, userResultName).then(async () => console.log(console.log(result.user.displayName)));\n      }).then(() => {\n        navigate(\"/\");\n      }).catch(error => {\n        console.log(error.code);\n        var errorCode = error.code;\n        switch (errorCode) {\n          case \"auth/account-exists-with-different-credential\":\n            alert(\"User already exists\");\n            break;\n          case \"auth/popup-blocked\":\n            alert(\"Please enable pop-ups in your browser settings\");\n            break;\n          case \"auth/popup-closed-by-user\":\n            alert(\"You have closed the pop-up before finishing sign up\");\n        }\n      });\n    }).catch(error => {\n      console.log(error.code);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"loginFormContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LoginContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        placeholder: \"email\",\n        onChange: event => setEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"passoword\",\n        placeholder: \"password\",\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"signInBtn\",\n          onClick: googleSignUp,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"signInBtn\",\n          onClick: signIn,\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"signInBtn\",\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/createAccount\",\n            children: \"Create an account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginMain, \"81CYVtDqJKovYioZ9yF8ubq1NJc=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginMain;\nexport { app,\n// auth,\ndb };\nvar _c;\n$RefreshReg$(_c, \"LoginMain\");","map":{"version":3,"names":["Navigate","NavLink","useNavigate","initializeApp","getFirestore","collection","getDoc","doc","setDoc","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","setPersistence","browserSessionPersistence","GoogleAuthProvider","signInWithPopup","signOut","React","useState","useAuthState","firebaseConfig","apiKey","process","env","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APPID","measurementId","REACT_APP_MEASUREMENTID","app","googleProvider","db","LoginMain","username","setUsername","email","setEmail","password","setPassword","navigate","getUser","docRef","docSnap","data","setUserProfile","dbref","Username","console","log","signIn","auth","then","userCred","user","displayName","currentUser","catch","error","code","errorCode","alert","u1","googleSignUp","result","credential","credentialFromResult","token","accessToken","userResultName","userResultEmail","event","target","value"],"sources":["/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/LoginPage/LoginMain.js"],"sourcesContent":["import { Navigate, NavLink, useNavigate } from 'react-router-dom'\n\nimport { initializeApp } from 'firebase/app'\nimport { getFirestore, collection, getDoc, doc, setDoc} from 'firebase/firestore/lite'\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, setPersistence, browserSessionPersistence, GoogleAuthProvider, signInWithPopup, signOut } from \"firebase/auth\"\nimport React, {useState} from 'react'\nimport { useAuthState } from \"react-firebase-hooks/auth\"\n\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: \"movie-webapp-7e024\",\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MEASUREMENTID\n};\n\nconst app = initializeApp(firebaseConfig)\n// const auth = getAuth(app)\nconst googleProvider = new GoogleAuthProvider();\nconst db = getFirestore(app)\n\nexport default function LoginMain() {\n\n  const [username, setUsername] = useState()\n  const [email, setEmail] = useState()\n  const [password, setPassword] = useState()\n\n  const navigate = useNavigate();\n\n  \n  async function getUser(email) {\n      const docRef = doc(db, \"Users\", `${email}`)\n      const docSnap = await getDoc(docRef)\n      //console.log(docSnap.data())\n      return docSnap.data()\n  }\n\n  async function setUserProfile(email, username) {\n    const dbref = collection(db, \"Users\")\n    await setDoc(doc(db, \"Users\", `${email}`), {\n        Username: `${username}`\n    })\n    console.log(`${username} set`)\n  } \n\n  function signIn() {\n      setPersistence(auth, browserSessionPersistence)\n      .then(async () => {\n          await signInWithEmailAndPassword(auth, email, password)\n          .then((userCred) => {\n              if (userCred) {\n                  userCred.user.displayName = username\n                  console.log(\"signed in \" + auth.currentUser.displayName)\n              }\n          })\n          .then(() => {\n            navigate(\"/\")\n          })\n          .catch((error) => {\n              console.log(error.code)\n              var errorCode = error.code;\n                switch (errorCode) {\n                  case \"auth/invalid-email\":\n                      alert(\"Invalid Email\");\n                      break;\n                  case \"auth/wrong-password\":\n                      alert(\"Invalid Password\");\n                      break;\n                  case \"auth/user-not-found\":\n                      alert(\"User Doesnt Exist - Please Check your Email and Username\")\n                      break;\n                  case \"auth/missing-email\":\n                      alert(\"Please enter your email\")\n                      break;\n                  case \"auth/internal-error\":\n                      alert(\"Please enter your password\")\n                      break;\n                  case \"\":\n                      alert(\"\")\n                      break;\n                }\n          })\n          let u1 = await getUser(email)\n          console.log(u1.Username)\n      }).catch ((error) => {\n          console.log(error)\n      })\n  }\n\n  function googleSignUp() {\n      setPersistence(auth, browserSessionPersistence)\n      .then (async () => {\n              signInWithPopup(auth, googleProvider)\n              .then(async (result) => {\n                  const credential = GoogleAuthProvider.credentialFromResult(result);\n                  const token = credential.accessToken;\n                  const userResultName = result.user.displayName\n                  const userResultEmail = result.user.email\n                  await setUserProfile( userResultEmail, userResultName).then(async () => console.log(console.log(result.user.displayName)))\n              })\n              .then(() => {\n                navigate(\"/\")\n              })\n              .catch((error) => {\n                  console.log(error.code)\n                  var errorCode = error.code\n                  switch (errorCode) {\n                      case \"auth/account-exists-with-different-credential\":\n                          alert(\"User already exists\")\n                          break;\n                      case \"auth/popup-blocked\":\n                          alert(\"Please enable pop-ups in your browser settings\")\n                          break;\n                      case \"auth/popup-closed-by-user\":\n                          alert(\"You have closed the pop-up before finishing sign up\")\n                  }\n              })\n\n      }).catch ((error) => {\n          console.log(error.code)\n      })\n  }\n\n  return (\n    <section className='loginFormContainer'>\n      <div className=\"LoginContainer\">\n        <input type=\"text\" id=\"email\" placeholder=\"email\" onChange={(event) => setEmail(event.target.value)} />\n        <input type=\"password\" id=\"passoword\" placeholder=\"password\" onChange={(event) => setPassword(event.target.value)} />\n\n        <div className=\"btn-container\">\n          <button id=\"signInBtn\" onClick={googleSignUp}>Sign in with Google</button>\n          <button id=\"signInBtn\" onClick={signIn}>Sign in</button>\n          <button id=\"signInBtn\"><NavLink to='/createAccount'>Create an account</NavLink></button>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport {\n  app,\n  // auth,\n  db\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}