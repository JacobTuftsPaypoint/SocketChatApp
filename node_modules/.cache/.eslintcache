[{"/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/index.js":"1","/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/App.js":"2","/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/LoginPage/LoginAll.jsx":"3","/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/MainPage/MainAll.jsx":"4","/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/CreateAccPage/CreateAccAll.jsx":"5","/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/LoginPage/LoginMain.js":"6","/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/LoginPage/LoginHeader.js":"7","/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/CreateAccPage/CreateAccHeader.js":"8","/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/CreateAccPage/CreateAccMain.js":"9","/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/MainPage/Main.jsx":"10","/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/MainPage/Card.jsx":"11","/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/MainPage/loginButton.js":"12"},{"size":324,"mtime":1669373515497,"results":"13","hashOfConfig":"14"},{"size":538,"mtime":1669373515489,"results":"15","hashOfConfig":"14"},{"size":207,"mtime":1669373515493,"results":"16","hashOfConfig":"14"},{"size":146,"mtime":1669373515496,"results":"17","hashOfConfig":"14"},{"size":242,"mtime":1669373515491,"results":"18","hashOfConfig":"14"},{"size":5328,"mtime":1669373515494,"results":"19","hashOfConfig":"14"},{"size":160,"mtime":1669373515494,"results":"20","hashOfConfig":"14"},{"size":169,"mtime":1669373515491,"results":"21","hashOfConfig":"14"},{"size":2845,"mtime":1669373515492,"results":"22","hashOfConfig":"14"},{"size":2526,"mtime":1669373515496,"results":"23","hashOfConfig":"14"},{"size":774,"mtime":1669377744237,"results":"24","hashOfConfig":"14"},{"size":1644,"mtime":1669373515497,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1j11ges",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"29"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"29"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"29"},"/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/index.js",[],[],[],"/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/App.js",[],[],"/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/LoginPage/LoginAll.jsx",[],[],"/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/MainPage/MainAll.jsx",["68"],[],"import Card from \"./Card\";\nimport Main from \"./Main\";\nimport React from 'react'\n\nexport default function MainAll() {\n  return (\n    <Main/>\n  )\n}\n","/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/CreateAccPage/CreateAccAll.jsx",[],[],"/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/LoginPage/LoginMain.js",["69","70","71","72","73","74","75","76","77","78"],[],"import { Navigate, NavLink, useNavigate } from 'react-router-dom'\n\nimport { initializeApp } from 'firebase/app'\nimport { getFirestore, collection, getDoc, doc, setDoc} from 'firebase/firestore/lite'\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, setPersistence, browserSessionPersistence, GoogleAuthProvider, signInWithPopup, signOut } from \"firebase/auth\"\nimport React, {useState} from 'react'\nimport { useAuthState } from \"react-firebase-hooks/auth\"\n\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: \"movie-webapp-7e024\",\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MEASUREMENTID\n};\n\nconst app = initializeApp(firebaseConfig)\nconst auth = getAuth(app)\nconst googleProvider = new GoogleAuthProvider();\nconst db = getFirestore(app)\n\nexport default function LoginMain() {\n\n  const [username, setUsername] = useState()\n  const [email, setEmail] = useState()\n  const [password, setPassword] = useState()\n\n  const navigate = useNavigate();\n\n  \n  async function getUser(email) {\n      const docRef = doc(db, \"Users\", `${email}`)\n      const docSnap = await getDoc(docRef)\n      //console.log(docSnap.data())\n      return docSnap.data()\n  }\n\n  async function setUserProfile(email, username) {\n    const dbref = collection(db, \"Users\")\n    await setDoc(doc(db, \"Users\", `${email}`), {\n        Username: `${username}`\n    })\n    console.log(`${username} set`)\n  } \n\n  function signIn() {\n      setPersistence(auth, browserSessionPersistence)\n      .then(async () => {\n          await signInWithEmailAndPassword(auth, email, password)\n          .then((userCred) => {\n              if (userCred) {\n                  userCred.user.displayName = username\n                  console.log(\"signed in \" + auth.currentUser.displayName)\n              }\n          })\n          .then(() => {\n            navigate(\"/\")\n          })\n          .catch((error) => {\n              console.log(error.code)\n              var errorCode = error.code;\n                switch (errorCode) {\n                  case \"auth/invalid-email\":\n                      alert(\"Invalid Email\");\n                      break;\n                  case \"auth/wrong-password\":\n                      alert(\"Invalid Password\");\n                      break;\n                  case \"auth/user-not-found\":\n                      alert(\"User Doesnt Exist - Please Check your Email and Username\")\n                      break;\n                  case \"auth/missing-email\":\n                      alert(\"Please enter your email\")\n                      break;\n                  case \"auth/internal-error\":\n                      alert(\"Please enter your password\")\n                      break;\n                  case \"\":\n                      alert(\"\")\n                      break;\n                }\n          })\n          let u1 = await getUser(email)\n          console.log(u1.Username)\n      }).catch ((error) => {\n          console.log(error)\n      })\n  }\n\n  function googleSignUp() {\n      setPersistence(auth, browserSessionPersistence)\n      .then (async () => {\n              signInWithPopup(auth, googleProvider)\n              .then(async (result) => {\n                  const credential = GoogleAuthProvider.credentialFromResult(result);\n                  const token = credential.accessToken;\n                  const userResultName = result.user.displayName\n                  const userResultEmail = result.user.email\n                  await setUserProfile( userResultEmail, userResultName).then(async () => console.log(console.log(result.user.displayName)))\n              })\n              .then(() => {\n                navigate(\"/\")\n              })\n              .catch((error) => {\n                  console.log(error.code)\n                  var errorCode = error.code\n                  switch (errorCode) {\n                      case \"auth/account-exists-with-different-credential\":\n                          alert(\"User already exists\")\n                          break;\n                      case \"auth/popup-blocked\":\n                          alert(\"Please enable pop-ups in your browser settings\")\n                          break;\n                      case \"auth/popup-closed-by-user\":\n                          alert(\"You have closed the pop-up before finishing sign up\")\n                  }\n              })\n\n      }).catch ((error) => {\n          console.log(error.code)\n      })\n  }\n\n  return (\n    <section className='loginFormContainer'>\n      <div className=\"LoginContainer\">\n        <input type=\"text\" id=\"email\" placeholder=\"email\" onChange={(event) => setEmail(event.target.value)} />\n        <input type=\"password\" id=\"passoword\" placeholder=\"password\" onChange={(event) => setPassword(event.target.value)} />\n\n        <div className=\"btn-container\">\n          <button id=\"signInBtn\" onClick={googleSignUp}>Sign in with Google</button>\n          <button id=\"signInBtn\" onClick={signIn}>Sign in</button>\n          <button id=\"signInBtn\"><NavLink to='/createAccount'>Create an account</NavLink></button>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport {\n  app,\n  auth,\n  db\n}\n","/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/LoginPage/LoginHeader.js",[],[],"/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/CreateAccPage/CreateAccHeader.js",[],[],"/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/CreateAccPage/CreateAccMain.js",["79","80","81","82","83","84"],[],"import React, {useState} from 'react'\nimport { app, auth, db } from '../LoginPage/LoginMain'\nimport { createUserWithEmailAndPassword, setPersistence, browserSessionPersistence, updateProfile } from 'firebase/auth'\nimport { getFirestore, collection, getDoc, doc, setDoc} from 'firebase/firestore/lite'\nimport { useNavigate} from \"react-router-dom\"\n\n\nexport default function CreateAccMain() {\n\n  const [username, setUsername] = useState()\n  const [email, setEmail] = useState()\n  const [password, setPassword] = useState()\n\n  const navigate = useNavigate()\n\n  function signUp() {\n\n    if(email === undefined || username === undefined || password === undefined) {\n      alert(\"Please Fill out ALL Fields\")\n    } else {\n\n    setPersistence(auth, browserSessionPersistence)\n        .then(()=> {\n            createUserWithEmailAndPassword(auth, email, password)\n            .then(async (userCredential) => {\n                await setUserProfile(email, username)\n            })\n            .then(() => {\n              navigate(\"/\")\n            })\n            .catch((error) => {\n                var errorCode = error.code;\n                console.log(error.code)\n                switch (errorCode) {\n                    case \"auth/email-already-exists\":\n                        alert(\"Email already in use\")\n                        break;\n                    case \"auth/invalid-email\":\n                        alert(\"Invalid email - check the format\")\n                        break;\n                    case \"auth/invalid-display-name\":\n                        alert(\"Please Enter a Name\")\n                        break;\n                    case \"auth/email-already-in-use\":\n                        alert(\"Email already in use\")\n                        break;\n                }\n        })})\n        .catch((error) => {\n            const error2 = error.code\n            console.log(error2)\n        })\n    }\n}\n\nasync function setUserProfile(email, username) {\n  const dbref = collection(db, \"Users\")\n  await setDoc(doc(db, \"Users\", `${email}`), {\n      Username: `${username}`\n  })\n  console.log(`${username} set`)\n}   \n\nasync function getUser(email) {\n  const docRef = doc(db, \"Users\", `${email}`)\n  const docSnap = await getDoc(docRef)\n  //console.log(docSnap.data())\n  return docSnap.data()\n}\n\n  return (\n    <section className='CreateAccMain'>\n      <div className='CreateAccContainer'>\n        <input type='email' id='email' placeholder='email' onChange={(event) => setEmail(event.target.value)}/>\n        <input type='text' id='username' placeholder='username' onChange={(event) => setUsername(event.target.value)}/>\n        <input type='password' id='passoword' placeholder='password' onChange={(event) => setPassword(event.target.value)}/>\n        <button id='signInBtn' onClick={signUp}>Create Account</button>\n      </div>\n    </section>\n  )\n}\n","/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/MainPage/Main.jsx",["85"],[],"import React, { useState, useEffect } from \"react\";\n// import {  NavLink } from \"react-router-dom\";\n// import { app } from \"../LoginPage/LoginMain\"\nimport { LoginButton } from \"./loginButton\";\n// import { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport Card from \"./Card\";\n\n\n\nlet API_key = \"&api_key=db95773a7fb212ba790d71f6adac0e7e\";\nlet base_url = \"https://api.themoviedb.org/3\";\nlet url = base_url + \"/discover/movie?sort_by=popularity.desc\" + API_key;\nlet arr = [\"Popular\"];\n\n\n\nconst Main = () => {\n  const [movieData, setData] = useState([]);\n  const [url_set, setUrl] = useState(url);\n  const [search, setSearch] = useState();\n\n  useEffect(() => {\n    fetch(url_set)\n      .then((res) => res.json())\n      .then((data) => {\n        setData(data.results);\n      });\n  }, [url_set]);\n\n  const getData = (movieType) => {\n    if (movieType === \"Popular\") {\n      url = base_url + \"/discover/movie?sort_by=popularity.desc\" + API_key;\n    }\n    setUrl(url);\n  };\n  const searchMovie = (evt) => {\n    if (evt.key === \"Enter\") {\n      url =\n        base_url +\n        \"/search/movie?api_key=db95773a7fb212ba790d71f6adac0e7e&query=\" +\n        search;\n      setUrl(url);\n      setSearch(\" \");\n    }\n  };\n  \n\n\n  return (\n    <>\n      <div className=\"header\">\n        <nav>\n          <ul>\n            {arr.map((value, pos) => {\n              return (\n                <li>\n                  <a\n                    href=\"#\"\n                    key={pos}\n                    name={value}\n                    onClick={(e) => {\n                      getData(e.target.name);\n                    }}\n                  >\n                    {value}\n                  </a>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n        <form>\n          <div className=\"search-btn\">\n            <input\n              type=\"text\"\n              placeholder=\"Search For Movie\"\n              className=\"inputText\"\n              onChange={(e) => {\n                setSearch(e.target.value);\n              }}\n              value={search}\n              onKeyPress={searchMovie}\n            ></input>\n            <div>\n              <LoginButton />\n            </div>\n          </div>\n        </form>\n      </div>\n      <div className=\"container\">\n        {movieData.length === 0 ? (\n          <p className=\"notfound\">Not Found</p>\n        ) : (\n          movieData.map((res, pos) => {\n            return <Card info={res} key={pos} />;\n          })\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Main;","/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/MainPage/Card.jsx",[],[],"/Users/ismailkhalil/Desktop/ahmed-work/SocketChatApp/src/Components/MainPage/loginButton.js",["86"],[],"import React, { useState, useEffect } from \"react\";\nimport {  NavLink } from \"react-router-dom\";\nimport { getDoc, doc } from 'firebase/firestore/lite'\nimport { app, db } from '../LoginPage/LoginMain'\nimport { getAuth, onAuthStateChanged, signOut } from \"firebase/auth\"\nimport { useAuthState } from \"react-firebase-hooks/auth\"\n\nconst auth = getAuth(app)\n\nexport function LoginButton() {\n\n    const [username, setUsername] = useState()\n    const [user] = useAuthState(auth)\n\n    async function getUser(email) {\n        const docRef = doc(db, \"Users\", `${email}`)\n        const docSnap = await getDoc(docRef)\n        const snapRef = docSnap.data()\n        //console.log(docSnap.data())\n        return snapRef\n    }\n\n    useEffect(() => {\n        onAuthStateChanged(auth, async (userCredential) => {\n            if(userCredential) {\n                const emailRef = userCredential.email\n                const name2 = await getUser(emailRef)\n                setTimeout( async ()=> {\n                    console.log(\"Loading\")\n                    setUsername(await getUser(emailRef).then((u) => {return (u.Username)}).catch((error) => {console.log(error)}))\n                }, 300)\n                setUsername(name2.Username)\n                \n\n            }\n        })\n    })\n\n    if(user) {\n    return (\n        <div>\n        <button className=\"log-in-btn\"> Account: {username}</button>\n        <button className=\"log-out-btn\" onClick={() => auth.signOut()}><NavLink to=\"/\">Sign Out</NavLink></button>\n        </div>\n    )\n    } else {\n    return(\n        <button className=\"log-in-btn\"> <NavLink to='/login'>Log in</NavLink> </button>\n    )\n    }\n}",{"ruleId":"87","severity":1,"message":"88","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":12},{"ruleId":"87","severity":1,"message":"91","line":1,"column":10,"nodeType":"89","messageId":"90","endLine":1,"endColumn":18},{"ruleId":"87","severity":1,"message":"92","line":5,"column":19,"nodeType":"89","messageId":"90","endLine":5,"endColumn":49},{"ruleId":"87","severity":1,"message":"93","line":5,"column":79,"nodeType":"89","messageId":"90","endLine":5,"endColumn":97},{"ruleId":"87","severity":1,"message":"94","line":5,"column":179,"nodeType":"89","messageId":"90","endLine":5,"endColumn":186},{"ruleId":"87","severity":1,"message":"95","line":7,"column":10,"nodeType":"89","messageId":"90","endLine":7,"endColumn":22},{"ruleId":"87","severity":1,"message":"96","line":27,"column":20,"nodeType":"89","messageId":"90","endLine":27,"endColumn":31},{"ruleId":"87","severity":1,"message":"97","line":42,"column":11,"nodeType":"89","messageId":"90","endLine":42,"endColumn":16},{"ruleId":"98","severity":1,"message":"99","line":65,"column":17,"nodeType":"100","messageId":"101","endLine":84,"endColumn":18},{"ruleId":"87","severity":1,"message":"102","line":99,"column":25,"nodeType":"89","messageId":"90","endLine":99,"endColumn":30},{"ruleId":"98","severity":1,"message":"99","line":110,"column":19,"nodeType":"100","messageId":"101","endLine":119,"endColumn":20},{"ruleId":"87","severity":1,"message":"103","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":13},{"ruleId":"87","severity":1,"message":"104","line":3,"column":85,"nodeType":"89","messageId":"90","endLine":3,"endColumn":98},{"ruleId":"87","severity":1,"message":"105","line":4,"column":10,"nodeType":"89","messageId":"90","endLine":4,"endColumn":22},{"ruleId":"98","severity":1,"message":"99","line":34,"column":17,"nodeType":"100","messageId":"101","endLine":47,"endColumn":18},{"ruleId":"87","severity":1,"message":"97","line":57,"column":9,"nodeType":"89","messageId":"90","endLine":57,"endColumn":14},{"ruleId":"87","severity":1,"message":"106","line":64,"column":16,"nodeType":"89","messageId":"90","endLine":64,"endColumn":23},{"ruleId":"107","severity":1,"message":"108","line":57,"column":19,"nodeType":"109","endLine":64,"endColumn":20},{"ruleId":"87","severity":1,"message":"94","line":5,"column":39,"nodeType":"89","messageId":"90","endLine":5,"endColumn":46},"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Navigate' is defined but never used.","'createUserWithEmailAndPassword' is defined but never used.","'onAuthStateChanged' is defined but never used.","'signOut' is defined but never used.","'useAuthState' is defined but never used.","'setUsername' is assigned a value but never used.","'dbref' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'token' is assigned a value but never used.","'app' is defined but never used.","'updateProfile' is defined but never used.","'getFirestore' is defined but never used.","'getUser' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]